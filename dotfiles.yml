---
#
# Usage example:
#
#     ansible-playbook -u <remote user> -i <remote hostname>, dotfiles.yml
#
- hosts: all
  sudo: no

  vars:
    homedir: "{{ ansible_env.HOME }}"

  tasks:
    - name: create base directory
      file: path={{ homedir }} state=directory mode=0755

    - name: create .tmp directory
      file: path={{ homedir }}/.tmp state=directory mode=0755

    - name: check files/directories in dotfiles/
      local_action: shell find dotfiles -maxdepth 1|grep -v '^dotfiles$'
      register: dotfiles

    - name: copy dotfiles
      synchronize: src={{ item }}
                   dest={{ homedir }}/
                   archive=yes
                   delete=yes
                   rsync_opts=--filter='P *.so'
      with_items: dotfiles.stdout.split('\n')

    - name: create .local directory
      file: path={{ homedir }}/.local state=directory mode=0755

    - name: copy local/* to {{ homedir }}/.local/
      synchronize: src=local/
                   dest={{ homedir }}/.local/
                   archive=yes
                   delete=no

    - name: create .terminfo directory
      file: path={{ homedir }}/.terminfo state=directory mode=0755

    - name: copy terminfo files
      copy: src={{ item }} dest={{ homedir }}/.terminfo/
      with_fileglob:
        - terminfo/*.terminfo

    - name: compile terminfo
      shell: tic {{ item }}
      with_fileglob:
        - "{{ homedir }}/.terminfo/*.terminfo"

    - name: set YCM parameters
      set_fact: ycm_params=--clang-completer
      when: ycm_with_clang is defined

    - name: check last modification date of C++ source files
      shell: find {{ homedir }}/.vim/bundle/YouCompleteMe -name "*.[ch]*" -type f -exec stat -c '%Y' {} \;|sort -n|uniq|tail -1
      register: ycm_last_modification_time

    - name: set default YCM build time fact
      set_fact:
        ycm_build_time: 0

    - name: check YCM library
      shell: stat -c '%Y' {{ homedir }}/.vim/bundle/YouCompleteMe/third_party/ycmd/ycm_core.so
      register: ycm_build_time_check
      ignore_errors: yes

    - name: update YCM build time fact
      set_fact:
        ycm_build_time: "{{ ycm_build_time_check.stdout }}"
      when: ycm_build_time_check is defined

    - name: show timestamp check results
      debug: var={{ item }}
      with_items:
        - ycm_build_time
        - ycm_last_modification_time.stdout

    - name: finish YCM installation
      shell: ./install.sh {{ ycm_params | default('') }}
      args:
        chdir: "{{ homedir }}/.vim/bundle/YouCompleteMe"
      environment:
        PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
      when: ycm_build_time | int < ycm_last_modification_time.stdout | int
