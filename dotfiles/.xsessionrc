#!/bin/bash

setxkbmap \
    -rules evdev \
    -model pc105 \
    -layout hu \
    -option
#    -option lv3:alt_switch -option terminate:ctrl_alt_bksp \
#    -option altwin:swap_lalt_lwin -option altwin:alt_super_win

if [ -f "$HOME/.layout.xkb" ]; then
    xkbcomp $HOME/.layout.xkb $DISPLAY
fi

xset b off

type "synclient" > /dev/null 2>&1 && while :; do
    synclient TapButton1=1
    synclient TapButton2=3
    synclient TapButton3=2
    synclient VertTwoFingerScroll=1
    synclient LockedDrags=1
    synclient LockedDragTimeout=500
    synclient PalmDetect=1
    break
done

if [ -f "$HOME/.Xdefaults" ]; then
    xrdb $HOME/.Xdefaults
fi

CONNECTED_DISPLAYS=$(xrandr|grep '\bconnected\b'|awk '{print $1}'|grep -v -E '\beDP[0-9]*\b')
DISCONNECTED_DISPLAYS=$(xrandr|grep '\bdisconnected\b'|awk '{print $1}'|grep -v -E '\beDP[0-9]*\b')
INTERNAL_DISPLAY=$(xrandr|grep -E '\beDP[0-9]*\b'|awk '{print $1}')
N_DISPLAYS=$(echo $CONNECTED_DISPLAYS|wc -w)
echo "CONNECTED_DISPLAYS $CONNECTED_DISPLAYS"
echo "DISCONNECTED_DISPLAYS $DISCONNECTED_DISPLAYS"
echo "INTERNAL_DISPLAY $INTERNAL_DISPLAY"
echo "N_DISPLAYS $N_DISPLAYS"

if [ $N_DISPLAYS -gt 0 ]; then
    echo "Disabling internal display $INTERNAL_DISPLAY"
    xrandr --output $INTERNAL_DISPLAY --off
    for d in $CONNECTED_DISPLAYS; do
        echo "Enabling display $d xrandr --output $d --auto"
        xrandr --output $d --auto
    done
    for d in $DISCONNECTED_DISPLAYS; do
        echo "Disabling display $d xrandr --output $d --off"
        xrandr --output $d --off
    done
else
    echo "Enabling internal display $INTERNAL_DISPLAY"
    xrandr --output $INTERNAL_DISPLAY --auto
    for d in $DISCONNECTED_DISPLAYS; do
        echo "Disabling display $d xrandr --output $d --off"
        xrandr --output $d --off
    done
fi

for p in $(pidof gnome-screensaver conky trayer skype nm-applet chrome \
           autocutsel parcellite); do
    kill $p
done

type "xscreensaver" > /dev/null 2>&1 && while :; do
    xscreensaver-command -exit
    xscreensaver -no-splash &
    break
done

type "gnome-keyring-daemon" > /dev/null 2>&1 && while :; do
    killall -9 gnome-keyring-daemon
    eval "$(gnome-keyring-daemon)"
    export GNOME_KEYRING_CONTROL
    export SSH_AUTH_SOCK
    export GPG_AGENT_INFO
    export GNOME_KEYRING_PID
    break
done

type "trayer" > /dev/null 2>&1 && trayer --widthtype request --align right \
    --height 32 --transparent true --alpha 0 --tint 0x0B0B0B &

type "skype" > /dev/null 2>&1 && while :; do
    (sleep 3 && PULSE_LATENCY_MSEC=30 skype &)
    break
done

type "dropbox" > /dev/null 2>&1 && (dropbox stop; dropbox start &)

type "nm-applet" > /dev/null 2>&1 && nm-applet &

type "devmon" > /dev/null 2>&1 && while :; do
    killall devmon > /dev/null 2>&1
    devmon &
    break
done

type "parcellite" > /dev/null 2>&1 && while :; do
    parcellite > /dev/null 2>&1 &
    break
done

FIREFOX="$HOME/.local/bin/firefox"
type "$FIREFOX" > /dev/null 2>&1 || FIREFOX="iceweasel"
type "$FIREFOX" > /dev/null 2>&1 && while :; do
    if [ -n "$(pidof $FIREFOX)" ]; then
        break
    fi
    (sleep 10 && LANG=C LC_ALL=C $FIREFOX) &
    break
done

XFLUX=$HOME/.local/bin/xflux
type $XFLUX > /dev/null 2>&1 && while :; do
    pid="$(pidof xflux)"
    if [ -n "$pid" ]; then
        kill -9 $pid
    fi
    geo=$(curl 'http://www.ipinfodb.com/my_ip_location.php')
    lat=$(echo "$geo"|tr '\r' '\n'|grep Latitude|sed -r 's/.*\W(-?\W[0-9]+\.[0-9]+)\W.*/\1/')
    lon=$(echo "$geo"|tr '\r' '\n'|grep Longitude|sed -r 's/.*\W(-?\W[0-9]+\.[0-9]+)\W.*/\1/')
    echo $geo >> /tmp/geo.txt
    echo $lat >> /tmp/geo.txt
    echo $lon >> /tmp/geo.txt
    if [ -z "$lat" ]; then
        lat="37.7833"
    fi
    if [ -z "$lon" ]; then
        lon="-122.4167"
    fi
    $XFLUX -l $lat -g $lon
    break
done
